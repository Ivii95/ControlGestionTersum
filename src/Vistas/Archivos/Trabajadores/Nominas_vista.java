/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas.Archivos.Trabajadores;

import Modelo.Entidades.Nominas;
import Modelo.Entidades.Trabajador;
import Utilidades.Utilidades;
import Utilidades.UtilidadesPantalla;
import Vistas.Principal.Principal_vista;
import java.awt.event.KeyEvent;

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.help.HelpSetException;

/**
 *
 * @author DisenoWeb
 */
public class Nominas_vista extends javax.swing.JFrame {

    Utilidades utilidades = new Utilidades();
    SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yy");
    public static int id_trabajador;

    /**
     * Creates new form Nominas_vista
     */
    public Nominas_vista() {
        initComponents();
    }

    Nominas_vista(Trabajador trabajador) {
        initComponents();
        UtilidadesPantalla.resolucionPantalla(this);
        UtilidadesPantalla.centrarTablas(tabla_nominas);
        ponAyuda();
        id_trabajador = trabajador.getId();
        tabla_nominas.getColumnModel().getColumn(0).setMaxWidth(0);
        tabla_nominas.getColumnModel().getColumn(0).setMinWidth(0);
        tabla_nominas.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        tabla_nominas.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);

        btn_añadir_nominas.setVisible(true);
        btn_borrar_nominas.setVisible(false);
        btn_limpiar_nominas.setVisible(false);
        btn_modificar_nominas.setVisible(false);
        String trabajadorinfo = lbl_info_trabajador1.getText() + " " + id_trabajador + " - " + trabajador.getApellido1() + trabajador.getApellido2();
        lbl_info_trabajador1.setText(trabajadorinfo.toUpperCase());
        utilidades.rellenarTablaDatosIndividuales(tabla_nominas, "nominas", id_trabajador);
    }

    public void ponAyuda() {
        try {
            HelpSet helpset = new HelpSet(getClass().getClassLoader(), UtilidadesPantalla.obtenerUrlAyuda());
            HelpBroker hb = helpset.createHelpBroker();
            hb.enableHelpKey(this.getContentPane(), "nominas", helpset);
        } catch (HelpSetException ex) {
            Logger.getLogger(Principal_vista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_nominas = new javax.swing.JTable();
        btn_añadir_nominas = new javax.swing.JButton();
        btn_borrar_nominas = new javax.swing.JButton();
        btn_limpiar_nominas = new javax.swing.JButton();
        btn_modificar_nominas = new javax.swing.JButton();
        txt_fechainicio_nomina = new org.jdesktop.swingx.JXDatePicker();
        txt_fechafin_nomina = new org.jdesktop.swingx.JXDatePicker();
        lbl_fechainicio_vacaciones = new javax.swing.JLabel();
        lbl_fechafin_vacaciones = new javax.swing.JLabel();
        txt_importe_nomina = new javax.swing.JTextField();
        lbl_fechainicio_vacaciones1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lbl_info_trabajador1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(1360, 762));

        tabla_nominas.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tabla_nominas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CODIGO TRABAJADOR", "FECHA INICIO", "FECHA FIN", "IMPORTE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_nominas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_nominasMouseClicked(evt);
            }
        });
        tabla_nominas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabla_nominasKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_nominas);
        if (tabla_nominas.getColumnModel().getColumnCount() > 0) {
            tabla_nominas.getColumnModel().getColumn(0).setResizable(false);
            tabla_nominas.getColumnModel().getColumn(1).setResizable(false);
            tabla_nominas.getColumnModel().getColumn(2).setResizable(false);
            tabla_nominas.getColumnModel().getColumn(4).setResizable(false);
        }

        btn_añadir_nominas.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_añadir_nominas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/añadir.png"))); // NOI18N
        btn_añadir_nominas.setText("Añadir");
        btn_añadir_nominas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_añadir_nominasActionPerformed(evt);
            }
        });

        btn_borrar_nominas.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_borrar_nominas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/borrar.png"))); // NOI18N
        btn_borrar_nominas.setText("Borrar");
        btn_borrar_nominas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrar_nominasActionPerformed(evt);
            }
        });

        btn_limpiar_nominas.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_limpiar_nominas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/limpiar.png"))); // NOI18N
        btn_limpiar_nominas.setText("Limpiar");
        btn_limpiar_nominas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiar_nominasActionPerformed(evt);
            }
        });

        btn_modificar_nominas.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_modificar_nominas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/modificar.png"))); // NOI18N
        btn_modificar_nominas.setText("Modificar");
        btn_modificar_nominas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificar_nominasActionPerformed(evt);
            }
        });

        lbl_fechainicio_vacaciones.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_fechainicio_vacaciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_fechainicio_vacaciones.setText("Fecha de inicio");

        lbl_fechafin_vacaciones.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_fechafin_vacaciones.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_fechafin_vacaciones.setText("Fecha de fin");

        txt_importe_nomina.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        lbl_fechainicio_vacaciones1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_fechainicio_vacaciones1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_fechainicio_vacaciones1.setText("Importe");

        lbl_info_trabajador1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_info_trabajador1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_info_trabajador1.setText("TRABAJADOR:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_info_trabajador1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_info_trabajador1, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_fechainicio_nomina, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_fechainicio_vacaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_fechafin_vacaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_fechafin_nomina, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_fechainicio_vacaciones1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_importe_nomina, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 324, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_añadir_nominas, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_limpiar_nominas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_modificar_nominas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_borrar_nominas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_fechainicio_vacaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_fechafin_vacaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_fechafin_nomina, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_fechainicio_nomina, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lbl_fechainicio_vacaciones1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_importe_nomina, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_añadir_nominas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_modificar_nominas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_borrar_nominas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_limpiar_nominas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_añadir_nominasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_añadir_nominasActionPerformed
        String[] opciones = {"1. Elegir fecha automáticamente", "2. Elegir fecha manualmente"};
        int comparacionfechas;

        Date fechainicio = txt_fechainicio_nomina.getDate();
        Date fechafin = txt_fechafin_nomina.getDate();
        Double importe = Double.parseDouble(txt_importe_nomina.getText());

        if (fechainicio == null) {
            JOptionPane.showMessageDialog(rootPane, "Fecha de inicio no puede estar vacio");
        } else {
            if (fechafin != null) {
                comparacionfechas = fechafin.compareTo(fechainicio);
            } else {
                comparacionfechas = 0;
            }

            if (comparacionfechas < 0) {
                JOptionPane.showMessageDialog(rootPane, "La fecha de inicio de la nomina no puede ser posterior a la fecha de fin de vacaciones");
            } else {
                if (!utilidades.comprobarFechaUltimaNomina(id_trabajador)) {
                    Nominas nominas = new Nominas(id_trabajador, fechainicio, fechafin, importe, true);
                    try {
                        //AHORA NOS CONECTAMOS A LA BBDD Y LO AÑADIMOS
                        utilidades.addBbdd("nominas", nominas);//METODO PARA AÑADIR CUALQUIER COSA A LA BBDD SEGUN LA TABLA Y EL OBJETO QUE SE LE PASE
                    } catch (SQLException ex) {
                        Logger.getLogger(Faltas_vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    String opcion = (String) JOptionPane.showInputDialog(null, "Selecciona un color", "Elegir", JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
                    if (opcion.contains("1")) {
                        JOptionPane.showMessageDialog(rootPane, "opcion 1 seleccionada");
                        utilidades.actualizarUltimaFechaActiva(id_trabajador);
                        Nominas nominas = new Nominas(id_trabajador, fechainicio, fechafin, importe, true);
                        try {
                            //AHORA NOS CONECTAMOS A LA BBDD Y LO AÑADIMOS
                            utilidades.addBbdd("nominas", nominas);//METODO PARA AÑADIR CUALQUIER COSA A LA BBDD SEGUN LA TABLA Y EL OBJETO QUE SE LE PASE
                        } catch (SQLException ex) {
                            Logger.getLogger(Faltas_vista.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else if (opcion.contains("2")) {
                        JOptionPane.showMessageDialog(rootPane, "opcion 2 seleccionada");
                    }
                }
            }
            utilidades.rellenarTablaDatosIndividuales(tabla_nominas, "nominas", id_trabajador);
            restablecerTodo();
        }
    }//GEN-LAST:event_btn_añadir_nominasActionPerformed

    private void btn_borrar_nominasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrar_nominasActionPerformed
        int filaSeleccionada = tabla_nominas.getSelectedRow();
        int opcionborrar = JOptionPane.showConfirmDialog(rootPane, "¿Estas seguro de borrar el registro?");
        switch (opcionborrar) {
            case 0://OPCION SI BORRAR TRABAJADOR
                String id = String.valueOf(tabla_nominas.getValueAt(filaSeleccionada, 0));
                 {
                    try {
                        utilidades.deleteBbdd("nominas", id);

                    } catch (SQLException ex) {
                    }

                    utilidades.rellenarTablaDatosIndividuales(tabla_nominas, "vacaciones", id_trabajador);
                    restablecerTodo();
                }
                break;

            case 1://OPCION NO BORRAR TRABAJADOR, se tiene que poner para que los datos que ya estan escritos en los jtextfield no se borren al darle a "NO"
                break;

            default://OPCION CANCELAR
                restablecerTodo();
                break;
        }
    }//GEN-LAST:event_btn_borrar_nominasActionPerformed

    private void btn_limpiar_nominasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiar_nominasActionPerformed
        restablecerTodo();
    }//GEN-LAST:event_btn_limpiar_nominasActionPerformed

    private void btn_modificar_nominasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificar_nominasActionPerformed
        Date fechainicio = txt_fechainicio_nomina.getDate();
        Date fechafin = txt_fechafin_nomina.getDate();
        int filaSeleccionada = tabla_nominas.getSelectedRow();
        int id_nominas = (int) tabla_nominas.getValueAt(filaSeleccionada, 0);
        double importe = (Double) tabla_nominas.getValueAt(filaSeleccionada, 4);

        if (fechafin == null || fechainicio == null) {
            JOptionPane.showMessageDialog(rootPane, "Fecha de inicio y fin no pueden estar vacio");
        } else {
            int comparacionfechas = fechafin.compareTo(fechainicio);
            if (comparacionfechas < 0) {
                JOptionPane.showMessageDialog(rootPane, "La fecha de inicio de nominas no puede ser posterior a la fecha de fin de nominas");
            } else {
                Nominas nomina = new Nominas(id_nominas, id_trabajador, fechainicio, fechafin, importe, true);

                if (!utilidades.comprobarFechasRepetidas("nominas", nomina)) {
                    try {
                        //AHORA NOS CONECTAMOS A LA BBDD Y LO AÑADIMOS
                        utilidades.updatebbdd("nominas", nomina, id_nominas);//METODO PARA AÑADIR CUALQUIER COSA A LA BBDD SEGUN LA TABLA Y EL OBJETO QUE SE LE PASE
                    } catch (SQLException ex) {
                        Logger.getLogger(Faltas_vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            utilidades.rellenarTablaDatosIndividuales(tabla_nominas, "nominas", id_trabajador);
            restablecerTodo();
        }
    }//GEN-LAST:event_btn_modificar_nominasActionPerformed

    private void tabla_nominasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_nominasKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            int filaSeleccionada = tabla_nominas.getSelectedRow();
            if (filaSeleccionada > 0) {
                filaSeleccionada = filaSeleccionada - 1;
            }
            rellenardatos(filaSeleccionada);
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            int filaSeleccionada = tabla_nominas.getSelectedRow();
            if (filaSeleccionada < tabla_nominas.getRowCount() - 1) {
                filaSeleccionada = filaSeleccionada + 1;
            }
            rellenardatos(filaSeleccionada);
        }
    }//GEN-LAST:event_tabla_nominasKeyReleased

    private void tabla_nominasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_nominasMouseClicked
        int filaSeleccionada = tabla_nominas.getSelectedRow();
        rellenardatos(filaSeleccionada);
    }//GEN-LAST:event_tabla_nominasMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Nominas_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Nominas_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Nominas_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Nominas_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Nominas_vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_añadir_nominas;
    private javax.swing.JButton btn_borrar_nominas;
    private javax.swing.JButton btn_limpiar_nominas;
    private javax.swing.JButton btn_modificar_nominas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_fechafin_vacaciones;
    private javax.swing.JLabel lbl_fechainicio_vacaciones;
    private javax.swing.JLabel lbl_fechainicio_vacaciones1;
    private javax.swing.JLabel lbl_info_trabajador1;
    private javax.swing.JTable tabla_nominas;
    private org.jdesktop.swingx.JXDatePicker txt_fechafin_nomina;
    private org.jdesktop.swingx.JXDatePicker txt_fechainicio_nomina;
    private javax.swing.JTextField txt_importe_nomina;
    // End of variables declaration//GEN-END:variables

    private void restablecerTodo() {
        //txt_buscador_trabajador.setText("");
        txt_fechafin_nomina.setDate(null);
        txt_fechainicio_nomina.setDate(null);
        txt_importe_nomina.setText("");
        btn_añadir_nominas.setVisible(true);
        btn_modificar_nominas.setVisible(false);
        btn_borrar_nominas.setVisible(false);
        btn_limpiar_nominas.setVisible(false);
    }

    private void rellenardatos(int filaSeleccionada) {
        btn_añadir_nominas.setVisible(false);
        btn_modificar_nominas.setVisible(true);
        btn_borrar_nominas.setVisible(true);
        btn_limpiar_nominas.setVisible(true);

        try {
            Date fechainicio = formato.parse((String) tabla_nominas.getValueAt(filaSeleccionada, 2));
            if (tabla_nominas.getValueAt(filaSeleccionada, 3).equals("Sin fecha")) {
                txt_fechafin_nomina.setDate(null);
            } else {
                Date fechafin = formato.parse((String) tabla_nominas.getValueAt(filaSeleccionada, 3));
                txt_fechafin_nomina.setDate(fechafin);
            }
            txt_fechainicio_nomina.setDate(fechainicio);
            txt_importe_nomina.setText(String.valueOf(tabla_nominas.getValueAt(filaSeleccionada, 4)));
        } catch (ParseException ex) {
            Logger.getLogger(Faltas_vista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
