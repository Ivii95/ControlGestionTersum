/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas.Archivos.Clientes;

import Modelo.Entidades.Centro;
import Modelo.Entidades.CentroTrabajador;
import Modelo.Entidades.Trabajador;
import Modelo.Repository.CentroTrabajadoresRepository;
import Modelo.Repository.TrabajadorRepository;
import Vistas.Archivos.Trabajadores.VistaHorario;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DisenoWeb
 */
public final class VistaAsignarTrabajadores extends javax.swing.JFrame {

    TrabajadorRepository repoTrabajadores;
    TrabajadorRepository repoTrabajadoresCentro;
    CentroTrabajadoresRepository repoCentroTrabajadores;
    Centro centroAsignarTrabajador;

    /**
     * Creates new form VistaAsignarTrabajadores
     */
    public VistaAsignarTrabajadores() {
        iniciarOtros();
    }

    public VistaAsignarTrabajadores(Centro centro) {
        this.centroAsignarTrabajador = centro;
        iniciarOtros();
        String titulo = txtTitulo.getText() + " " + centroAsignarTrabajador.getNombre().toUpperCase();
        txtTitulo.setText(titulo);
    }

    public void iniciarOtros() {
        initComponents();
        Utilidades.UtilidadesPantalla.centrarTablas(tablaTrabajadores);
        Utilidades.UtilidadesPantalla.centrarTablas(tablaTrabajadoresCentro);
        Utilidades.UtilidadesPantalla.resolucionPantalla(this);
        //Esto lo unico que hace basicamente es ocultarte la columna id y hacerte mas chico el codigo.
        tablaTrabajadores.getColumnModel().getColumn(0).setMaxWidth(0);
        tablaTrabajadores.getColumnModel().getColumn(0).setMinWidth(0);
        tablaTrabajadores.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        tablaTrabajadores.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        tablaTrabajadores.getColumnModel().getColumn(1).setMaxWidth(60);
        tablaTrabajadoresCentro.getColumnModel().getColumn(0).setMaxWidth(0);
        tablaTrabajadoresCentro.getColumnModel().getColumn(0).setMinWidth(0);
        tablaTrabajadoresCentro.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        tablaTrabajadoresCentro.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        tablaTrabajadoresCentro.getColumnModel().getColumn(1).setMaxWidth(60);
        //Inicializamos los repositorios necesarios
        repoCentroTrabajadores = new CentroTrabajadoresRepository();
        //repoCentroTrabajadores.rellenarListaByCentro(centroAsignarTrabajador);
        repoTrabajadores = new TrabajadorRepository();
        repoTrabajadoresCentro = new TrabajadorRepository();
        repoTrabajadores.rellenarTablaTrabajadoresNoContratados(tablaTrabajadores, centroAsignarTrabajador);
        repoTrabajadoresCentro.rellenarTablaPorCodigoCentro(tablaTrabajadoresCentro, centroAsignarTrabajador);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRect1 = new org.edisoncor.gui.panel.PanelRect();
        panelCurves1 = new org.edisoncor.gui.panel.PanelCurves();
        txtTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTrabajadores = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaTrabajadoresCentro = new javax.swing.JTable();
        Panel_botones1 = new org.edisoncor.gui.panel.Panel();
        btnDerecha = new javax.swing.JButton();
        btnIzquierda = new javax.swing.JButton();
        Buscador1 = new javax.swing.JPanel();
        txt_buscadorTrabajadoresCentro = new javax.swing.JTextField();
        btn_buscar1 = new org.edisoncor.gui.button.ButtonIcon();
        Buscador = new javax.swing.JPanel();
        txt_buscadorTrabajadores = new javax.swing.JTextField();
        btn_buscar = new org.edisoncor.gui.button.ButtonIcon();
        btnTrabajadores = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1360, 762));
        setPreferredSize(new java.awt.Dimension(1360, 762));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRect1.setColorPrimario(new java.awt.Color(102, 102, 102));
        panelRect1.setColorSecundario(new java.awt.Color(204, 204, 204));
        panelRect1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelCurves1.setBackground(new java.awt.Color(102, 102, 102));
        panelCurves1.setForeground(new java.awt.Color(0, 0, 0));
        panelCurves1.setOpaque(true);
        panelCurves1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtTitulo.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        txtTitulo.setForeground(new java.awt.Color(240, 240, 240));
        txtTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTitulo.setText("Centro:");
        panelCurves1.add(txtTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1360, 40));

        tablaTrabajadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "CODIGO", "NOMBRE", "APELLIDOS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaTrabajadores);

        panelCurves1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, -1, 590));

        tablaTrabajadoresCentro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "CODIGO", "NOMBRE", "APELLIDOS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaTrabajadoresCentro);

        panelCurves1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 110, -1, 590));

        Panel_botones1.setColorPrimario(new java.awt.Color(102, 102, 102));
        Panel_botones1.setColorSecundario(new java.awt.Color(204, 204, 204));

        btnDerecha.setText("==>");
        btnDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDerechaActionPerformed(evt);
            }
        });

        btnIzquierda.setText("<==");
        btnIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzquierdaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_botones1Layout = new javax.swing.GroupLayout(Panel_botones1);
        Panel_botones1.setLayout(Panel_botones1Layout);
        Panel_botones1Layout.setHorizontalGroup(
            Panel_botones1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_botones1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_botones1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDerecha, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                    .addComponent(btnIzquierda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        Panel_botones1Layout.setVerticalGroup(
            Panel_botones1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_botones1Layout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addComponent(btnDerecha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIzquierda)
                .addContainerGap(260, Short.MAX_VALUE))
        );

        panelCurves1.add(Panel_botones1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 110, 250, 590));

        Buscador1.setBackground(new java.awt.Color(102, 102, 102));
        Buscador1.setForeground(new java.awt.Color(102, 102, 102));

        txt_buscadorTrabajadoresCentro.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_buscadorTrabajadoresCentro.setText("Buscar...");
        txt_buscadorTrabajadoresCentro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_buscadorTrabajadoresCentroFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_buscadorTrabajadoresCentroFocusLost(evt);
            }
        });
        txt_buscadorTrabajadoresCentro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_buscadorTrabajadoresCentroKeyReleased(evt);
            }
        });

        btn_buscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/busqueda.png"))); // NOI18N
        btn_buscar1.setText("buttonIcon1");

        javax.swing.GroupLayout Buscador1Layout = new javax.swing.GroupLayout(Buscador1);
        Buscador1.setLayout(Buscador1Layout);
        Buscador1Layout.setHorizontalGroup(
            Buscador1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Buscador1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(btn_buscar1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txt_buscadorTrabajadoresCentro, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        Buscador1Layout.setVerticalGroup(
            Buscador1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Buscador1Layout.createSequentialGroup()
                .addGroup(Buscador1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_buscadorTrabajadoresCentro, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_buscar1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelCurves1.add(Buscador1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 60, -1, -1));

        Buscador.setBackground(new java.awt.Color(102, 102, 102));
        Buscador.setForeground(new java.awt.Color(102, 102, 102));

        txt_buscadorTrabajadores.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_buscadorTrabajadores.setText("Buscar...");
        txt_buscadorTrabajadores.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_buscadorTrabajadoresFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_buscadorTrabajadoresFocusLost(evt);
            }
        });
        txt_buscadorTrabajadores.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_buscadorTrabajadoresKeyReleased(evt);
            }
        });

        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/busqueda.png"))); // NOI18N
        btn_buscar.setText("buttonIcon1");

        javax.swing.GroupLayout BuscadorLayout = new javax.swing.GroupLayout(Buscador);
        Buscador.setLayout(BuscadorLayout);
        BuscadorLayout.setHorizontalGroup(
            BuscadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuscadorLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(btn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(txt_buscadorTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        BuscadorLayout.setVerticalGroup(
            BuscadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuscadorLayout.createSequentialGroup()
                .addGroup(BuscadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_buscadorTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelCurves1.add(Buscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, -1, -1));

        btnTrabajadores.setBackground(new java.awt.Color(51, 51, 51));
        btnTrabajadores.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnTrabajadores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/trabajador.png"))); // NOI18N
        btnTrabajadores.setText("Trabajadores sin centro");
        btnTrabajadores.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 51, 51)));
        btnTrabajadores.setPreferredSize(new java.awt.Dimension(150, 40));
        btnTrabajadores.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btnTrabajadoresItemStateChanged(evt);
            }
        });
        panelCurves1.add(btnTrabajadores, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 210, -1));

        panelRect1.add(panelCurves1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 1374, 740));

        getContentPane().add(panelRect1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-8, -10, 1380, 790));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_buscadorTrabajadoresKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscadorTrabajadoresKeyReleased

        if (!txt_buscadorTrabajadores.getText().isEmpty()) {//SI EL BUSCADOR NO ESTA VACIO, VACIA LA TABLA Y EMPIEZA A BUSCAR CON LOS CARACTERES QUE LE VAMOS INTRODUCIENDO
            DefaultTableModel dm = (DefaultTableModel) tablaTrabajadores.getModel();
            dm.getDataVector().removeAllElements();
            dm.fireTableDataChanged();
            repoTrabajadores.buscar(tablaTrabajadores, txt_buscadorTrabajadores.getText());
        } else {//SI POR EL CONTRARIO ESTA VACIO EL BUSCADOR, ENTONCES RELLENA LA TABLA CON TODO
            if (btnTrabajadores.isSelected()) {
                repoTrabajadores.rellenarTablaTrabajadoresSinCentro(tablaTrabajadores);
            } else {
                repoTrabajadores.rellenarTablaTrabajadoresNoContratados(tablaTrabajadores, centroAsignarTrabajador);
            }
        }
    }//GEN-LAST:event_txt_buscadorTrabajadoresKeyReleased

    private void txt_buscadorTrabajadoresFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_buscadorTrabajadoresFocusLost
        if (txt_buscadorTrabajadores.getText().length() == 0) {
            txt_buscadorTrabajadores.setText("Buscar...");
        }
    }//GEN-LAST:event_txt_buscadorTrabajadoresFocusLost

    private void txt_buscadorTrabajadoresFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_buscadorTrabajadoresFocusGained
        if (txt_buscadorTrabajadores.getText().contains("Buscar...")) {
            txt_buscadorTrabajadores.setText("");
        }
    }//GEN-LAST:event_txt_buscadorTrabajadoresFocusGained

    private void txt_buscadorTrabajadoresCentroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_buscadorTrabajadoresCentroFocusGained
        if (txt_buscadorTrabajadoresCentro.getText().contains("Buscar...")) {
            txt_buscadorTrabajadoresCentro.setText("");
        }
    }//GEN-LAST:event_txt_buscadorTrabajadoresCentroFocusGained

    private void txt_buscadorTrabajadoresCentroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_buscadorTrabajadoresCentroFocusLost
        if (txt_buscadorTrabajadoresCentro.getText().length() == 0) {
            txt_buscadorTrabajadoresCentro.setText("Buscar...");
        }
    }//GEN-LAST:event_txt_buscadorTrabajadoresCentroFocusLost

    private void txt_buscadorTrabajadoresCentroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscadorTrabajadoresCentroKeyReleased
        if (!txt_buscadorTrabajadoresCentro.getText().isEmpty()) {//SI EL BUSCADOR NO ESTA VACIO, VACIA LA TABLA Y EMPIEZA A BUSCAR CON LOS CARACTERES QUE LE VAMOS INTRODUCIENDO
            DefaultTableModel dm = (DefaultTableModel) tablaTrabajadoresCentro.getModel();
            dm.getDataVector().removeAllElements();
            dm.fireTableDataChanged();
            repoTrabajadoresCentro.buscar(tablaTrabajadoresCentro, txt_buscadorTrabajadoresCentro.getText());
        } else {//SI POR EL CONTRARIO ESTA VACIO EL BUSCADOR, ENTONCES RELLENA LA TABLA CON TODO
            repoTrabajadoresCentro.rellenarTablaPorCodigoCentro(tablaTrabajadoresCentro, centroAsignarTrabajador);
        }
    }//GEN-LAST:event_txt_buscadorTrabajadoresCentroKeyReleased

    private void btnDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDerechaActionPerformed
        if (tablaTrabajadores.getSelectedRow() != -1) {
            //Cogemos el trabajador seleccionado
            int id = Utilidades.UtilidadesPantalla.getIdSelected(tablaTrabajadores);
            //repoTrabajadores.rellenarListaDefault();
            Trabajador trabajador = repoTrabajadores.getById(id);
            //Preguntamos si quiere añadir un horario
            int opcionborrar = JOptionPane.showConfirmDialog(rootPane, "¿Quiere crear un horario para este trabajador?");
            switch (opcionborrar) {
                case 0://OPCION SI
                    //Abrimos una nueva ventana de horario para que seleccione el horario.
                    VistaHorario horario = new VistaHorario(trabajador, centroAsignarTrabajador);
                    //La hacemos visible
                    horario.setVisible(true);
                    break;
                case 1:
                    break;
            }
            //Creamos el centro trabajador y añadimos los valores.
            CentroTrabajador ct = new CentroTrabajador();
            ct.setCentro(centroAsignarTrabajador);
            ct.setTrabajador(trabajador);
            //Despues lo insertamos en la base de datos
            if (repoCentroTrabajadores.insert(ct)) {
                //insertamos el trabajador en la lista de los trabajadores izquierda.
                //repoTrabajadores.insertFromLista(trabajador);
                //borramos el trabajador en la lista de los trabajadores derecha.
                //repoTrabajadoresCentro.deleteFromLista(trabajador);
                //Refrescamos las tablas.
                repoTrabajadoresCentro.rellenarTablaPorCodigoCentro(tablaTrabajadoresCentro, centroAsignarTrabajador);
                if (btnTrabajadores.isSelected()) {
                    repoTrabajadores.rellenarTablaTrabajadoresSinCentro(tablaTrabajadores);
                } else {
                    repoTrabajadores.rellenarTablaTrabajadoresNoContratados(tablaTrabajadores, centroAsignarTrabajador);
                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un trabajador en la tabla de la Izquierda");
        }
    }//GEN-LAST:event_btnDerechaActionPerformed

    private void btnIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzquierdaActionPerformed
        //Controlamos que este seleccionado algun trabajador en la tabla de la derecha
        if (tablaTrabajadoresCentro.getSelectedRow() != -1) {
            //Cogemos la fila que a seleccionado
            int filaSeleccionada = tablaTrabajadoresCentro.getSelectedRow();
            //Le preguntamos al usuario si quiere borrarlo de verdad o a sido un error.
            int opcionborrar = JOptionPane.showConfirmDialog(rootPane, "¿Estas seguro de quitar al \n"
                    + "Trabajador: " + (String) tablaTrabajadoresCentro.getValueAt(filaSeleccionada, 2) + " " + (String) tablaTrabajadoresCentro.getValueAt(filaSeleccionada, 3) + "\n"
                    + "del Centro: " + centroAsignarTrabajador.getNombre());
            switch (opcionborrar) {
                case 0://OPCION SI BORRAR TRABAJADOR
                    //Cogemos el id de la tabla que queremos y de la fila seleccionada. Hay un pequeño metodo ya hecho en utilidadesPantalla
                    String codigo_trabajador = (String) tablaTrabajadoresCentro.getValueAt(filaSeleccionada, 1);
                    //lo borramos de la base de datos con el repositorio

                    if (repoCentroTrabajadores.deleteTrabajador(codigo_trabajador)) {
                        //Si se borra de la base de datos actualizamos la tabla.
                        repoTrabajadoresCentro.rellenarTablaPorCodigoCentro(tablaTrabajadoresCentro, centroAsignarTrabajador);
                        if (btnTrabajadores.isSelected()) {
                            repoTrabajadores.rellenarTablaTrabajadoresSinCentro(tablaTrabajadores);
                        } else {
                            repoTrabajadores.rellenarTablaTrabajadoresNoContratados(tablaTrabajadores, centroAsignarTrabajador);
                        }
                    }
                    break;
                //Creo que si no pones el case 1 siempre te lo borra aunq pregunte
                case 1:
                    break;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un trabajador en la tabla de la derecha");
        }
    }//GEN-LAST:event_btnIzquierdaActionPerformed

    private void btnTrabajadoresItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btnTrabajadoresItemStateChanged
        if (btnTrabajadores.isSelected()) {
            btnTrabajadores.setText("Trabajadores sin centro");
            repoTrabajadores.rellenarTablaTrabajadoresSinCentro(tablaTrabajadores);
        } else {
            btnTrabajadores.setText("Trabajadores con centro");
            repoTrabajadores.rellenarTablaTrabajadoresNoContratados(tablaTrabajadores, centroAsignarTrabajador);
        }
    }//GEN-LAST:event_btnTrabajadoresItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaAsignarTrabajadores.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaAsignarTrabajadores.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaAsignarTrabajadores.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaAsignarTrabajadores.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new VistaAsignarTrabajadores().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Buscador;
    private javax.swing.JPanel Buscador1;
    private org.edisoncor.gui.panel.Panel Panel_botones1;
    private javax.swing.JButton btnDerecha;
    private javax.swing.JButton btnIzquierda;
    private javax.swing.JToggleButton btnTrabajadores;
    private org.edisoncor.gui.button.ButtonIcon btn_buscar;
    private org.edisoncor.gui.button.ButtonIcon btn_buscar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private org.edisoncor.gui.panel.PanelCurves panelCurves1;
    private org.edisoncor.gui.panel.PanelRect panelRect1;
    private javax.swing.JTable tablaTrabajadores;
    private javax.swing.JTable tablaTrabajadoresCentro;
    private javax.swing.JLabel txtTitulo;
    private javax.swing.JTextField txt_buscadorTrabajadores;
    private javax.swing.JTextField txt_buscadorTrabajadoresCentro;
    // End of variables declaration//GEN-END:variables
}
