/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas.Archivos;

import Modelo.Contrato;
import Modelo.Trabajador;
import Utilidades.Utilidades;
import Utilidades.UtilidadesPantalla;
import Vistas.Principal.Principal_vista;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.help.HelpSetException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DisenoWeb
 */
public class Contratos_vista extends javax.swing.JFrame {

    Utilidades utilidades = new Utilidades();
    SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yy");

    @Override
    public void setExtendedState(int state) {
        super.setExtendedState(state); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * Creates new form Contratos_vista
     */
    public Contratos_vista() {
        initComponents();
        UtilidadesPantalla.resolucionPantalla(this);
        UtilidadesPantalla.centrarTablas(tabla_contratos);
        ponAyuda();
        jPanel1.requestFocusInWindow();
        utilidades.rellenarLista("trabajadores", ""); //Rellenamos la lista de trabajadores para luego poder utilizarla para rellenar la tabla
        panel_tabla_trabajadores.setVisible(false);
        btn_modificar_contrato.setVisible(false);
        btn_cancelar_modificacion_contrato.setVisible(false);
        btn_borrar_contrato.setVisible(false);
        btn_cancelar_añadir_contrato.setVisible(false);
        txt_nombre_trabajador.setVisible(false);
        lbl_trabajador.setVisible(false);
        lbl_situacion_contrato.setVisible(false);
        rb_situacion_alta.setVisible(false);
        rb_situacion_baja.setVisible(false);
        lbl_informacion_buscador.setToolTipText("Puedes buscar por codigo o por nombre de trabajador");

        //TABLA DE CONTRATOS
        tabla_contratos.getColumnModel().getColumn(0).setMaxWidth(0);
        tabla_contratos.getColumnModel().getColumn(0).setMinWidth(0);
        tabla_contratos.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        tabla_contratos.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        tabla_contratos.getColumnModel().getColumn(1).setMinWidth(130);
        tabla_contratos.getColumnModel().getColumn(1).setMaxWidth(130);
        tabla_contratos.getColumnModel().getColumn(2).setMinWidth(150);
        tabla_contratos.getColumnModel().getColumn(2).setMaxWidth(150);

        utilidades.rellenarTabla(tabla_contratos, "contratos", "");

        //TABLA DE TRABAJADORES
        tabla_trabajadores.getColumnModel().getColumn(0).setMaxWidth(0);
        tabla_trabajadores.getColumnModel().getColumn(0).setMinWidth(0);
        tabla_trabajadores.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        tabla_trabajadores.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        tabla_trabajadores.getColumnModel().getColumn(1).setMaxWidth(60);

    }

    public void ponAyuda() {
        try {
            HelpSet helpset = new HelpSet(getClass().getClassLoader(), UtilidadesPantalla.obtenerUrlAyuda());
            HelpBroker hb = helpset.createHelpBroker();
            hb.enableHelpKey(this.getContentPane(), "contratos", helpset);
        } catch (HelpSetException ex) {
            Logger.getLogger(Principal_vista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo1 = new javax.swing.ButtonGroup();
        grupo2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btn_borrar_contrato = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_nombre_contrato = new javax.swing.JTextField();
        btn_añadir_contrato = new javax.swing.JButton();
        btn_modificar_contrato = new javax.swing.JButton();
        btn_cancelar_añadir_contrato = new javax.swing.JButton();
        lbl_situacion_contrato = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_codigo_contrato = new javax.swing.JTextField();
        rb_situacion_alta = new javax.swing.JRadioButton();
        rb_situacion_baja = new javax.swing.JRadioButton();
        txt_fechafin_contrato = new org.jdesktop.swingx.JXDatePicker();
        jLabel16 = new javax.swing.JLabel();
        rb_asegurado_si = new javax.swing.JRadioButton();
        rb_asegurado_no = new javax.swing.JRadioButton();
        txt_horas_contrato = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btn_cancelar_modificacion_contrato = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txt_fechainicio_contrato = new org.jdesktop.swingx.JXDatePicker();
        lbl_trabajador = new javax.swing.JLabel();
        txt_nombre_trabajador = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_contratos = new javax.swing.JTable();
        panel_tabla_trabajadores = new javax.swing.JPanel();
        txt_buscador_trabajador = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_trabajadores = new javax.swing.JTable();
        txt_buscador_contrato = new javax.swing.JTextField();
        lbl_buscar = new javax.swing.JLabel();
        lbl_informacion_buscador = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Listado de contratos");
        setMinimumSize(new java.awt.Dimension(1360, 762));
        setResizable(false);
        setSize(new java.awt.Dimension(1360, 762));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_borrar_contrato.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_borrar_contrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/borrar.png"))); // NOI18N
        btn_borrar_contrato.setText("Borrar Registro");
        btn_borrar_contrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrar_contratoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_borrar_contrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 90, 199, 35));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Denominación Contrato");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 640, 32));

        txt_nombre_contrato.setEditable(false);
        txt_nombre_contrato.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_nombre_contrato.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_nombre_contratoKeyTyped(evt);
            }
        });
        jPanel1.add(txt_nombre_contrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 640, 35));

        btn_añadir_contrato.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_añadir_contrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/añadir.png"))); // NOI18N
        btn_añadir_contrato.setText("Añadir");
        btn_añadir_contrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_añadir_contratoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_añadir_contrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 50, 199, 35));

        btn_modificar_contrato.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_modificar_contrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/modificar.png"))); // NOI18N
        btn_modificar_contrato.setText("Modificar");
        btn_modificar_contrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificar_contratoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_modificar_contrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 50, 199, 35));

        btn_cancelar_añadir_contrato.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_cancelar_añadir_contrato.setText("Cancelar");
        btn_cancelar_añadir_contrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelar_añadir_contratoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cancelar_añadir_contrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 50, 199, 35));

        lbl_situacion_contrato.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_situacion_contrato.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_situacion_contrato.setText("Situación del contrato");
        jPanel1.add(lbl_situacion_contrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 92, 200, 35));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Fecha de fin");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 92, 200, 35));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Código del contrato");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 180, 35));

        txt_codigo_contrato.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_codigo_contrato.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_codigo_contratoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_codigo_contratoKeyTyped(evt);
            }
        });
        jPanel1.add(txt_codigo_contrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 180, 35));

        grupo2.add(rb_situacion_alta);
        rb_situacion_alta.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rb_situacion_alta.setText("Alta");
        jPanel1.add(rb_situacion_alta, new org.netbeans.lib.awtextra.AbsoluteConstraints(663, 133, -1, -1));

        grupo2.add(rb_situacion_baja);
        rb_situacion_baja.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rb_situacion_baja.setText("Baja");
        jPanel1.add(rb_situacion_baja, new org.netbeans.lib.awtextra.AbsoluteConstraints(746, 133, -1, -1));

        txt_fechafin_contrato.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        jPanel1.add(txt_fechafin_contrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, 200, 35));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Asegurado");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 92, 200, 35));

        grupo1.add(rb_asegurado_si);
        rb_asegurado_si.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rb_asegurado_si.setText("Si");
        jPanel1.add(rb_asegurado_si, new org.netbeans.lib.awtextra.AbsoluteConstraints(458, 133, -1, -1));

        grupo1.add(rb_asegurado_no);
        rb_asegurado_no.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rb_asegurado_no.setText("No");
        jPanel1.add(rb_asegurado_no, new org.netbeans.lib.awtextra.AbsoluteConstraints(528, 133, -1, -1));

        txt_horas_contrato.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_horas_contrato.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_horas_contratoKeyTyped(evt);
            }
        });
        jPanel1.add(txt_horas_contrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 51, 200, 35));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Horas del contrato");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 11, 200, 35));

        btn_cancelar_modificacion_contrato.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_cancelar_modificacion_contrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/limpiar.png"))); // NOI18N
        btn_cancelar_modificacion_contrato.setText("Limpiar datos");
        btn_cancelar_modificacion_contrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelar_modificacion_contratoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cancelar_modificacion_contrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 130, 199, 35));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Fecha de inicio");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 92, 180, 35));

        txt_fechainicio_contrato.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        txt_fechainicio_contrato.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_fechainicio_contratoKeyTyped(evt);
            }
        });
        jPanel1.add(txt_fechainicio_contrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 180, 35));

        lbl_trabajador.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_trabajador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_trabajador.setText("Trabajador");
        jPanel1.add(lbl_trabajador, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 410, 35));

        txt_nombre_trabajador.setEditable(false);
        txt_nombre_trabajador.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel1.add(txt_nombre_trabajador, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 410, 35));

        tabla_contratos.setAutoCreateRowSorter(true);
        tabla_contratos.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tabla_contratos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CÓDIGO DE CONTRATO", "CÓDIGO DEL TRABAJADOR", "FECHA INICIO", "FECHA FIN", "ESTADO DEL CONTRATO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_contratos.setRowHeight(25);
        tabla_contratos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_contratosMouseClicked(evt);
            }
        });
        tabla_contratos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabla_contratosKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_contratos);
        if (tabla_contratos.getColumnModel().getColumnCount() > 0) {
            tabla_contratos.getColumnModel().getColumn(0).setResizable(false);
            tabla_contratos.getColumnModel().getColumn(1).setResizable(false);
            tabla_contratos.getColumnModel().getColumn(2).setResizable(false);
            tabla_contratos.getColumnModel().getColumn(3).setResizable(false);
            tabla_contratos.getColumnModel().getColumn(4).setResizable(false);
            tabla_contratos.getColumnModel().getColumn(5).setResizable(false);
        }

        panel_tabla_trabajadores.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_buscador_trabajador.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_buscador_trabajador.setText("Buscar...");
        txt_buscador_trabajador.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_buscador_trabajadorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_buscador_trabajadorFocusLost(evt);
            }
        });
        txt_buscador_trabajador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_buscador_trabajadorKeyTyped(evt);
            }
        });
        panel_tabla_trabajadores.add(txt_buscador_trabajador, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 10, 230, 40));

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/busqueda.png"))); // NOI18N
        panel_tabla_trabajadores.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, 50, -1));

        tabla_trabajadores.setAutoCreateRowSorter(true);
        tabla_trabajadores.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tabla_trabajadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CÓDIGO", "NOMBRE", "APELLIDOS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_trabajadores.setPreferredSize(null);
        tabla_trabajadores.setRowHeight(25);
        tabla_trabajadores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_trabajadoresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_trabajadores);

        panel_tabla_trabajadores.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-90, 60, 1420, 200));

        txt_buscador_contrato.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_buscador_contrato.setText("Buscar...");
        txt_buscador_contrato.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_buscador_contratoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_buscador_contratoFocusLost(evt);
            }
        });
        txt_buscador_contrato.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_buscador_contratoKeyReleased(evt);
            }
        });

        lbl_buscar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/busqueda.png"))); // NOI18N

        lbl_informacion_buscador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ayuda .png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lbl_buscar)
                .addGap(2, 2, 2)
                .addComponent(txt_buscador_contrato, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_informacion_buscador)
                .addGap(566, 566, 566))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1335, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panel_tabla_trabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, 1336, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(panel_tabla_trabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_buscador_contrato, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_buscar)
                    .addComponent(lbl_informacion_buscador, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabla_contratosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_contratosMouseClicked
        int filaSeleccionada = tabla_contratos.getSelectedRow();
        txt_codigo_contrato.setEditable(false);
        rellenardatos(filaSeleccionada);
    }//GEN-LAST:event_tabla_contratosMouseClicked

    private void tabla_contratosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_contratosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
            int filaSeleccionada = tabla_contratos.getSelectedRow();
            if (filaSeleccionada > 0) {
                filaSeleccionada = filaSeleccionada - 1;
            }
            rellenardatos(filaSeleccionada);
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            int filaSeleccionada = tabla_contratos.getSelectedRow();
            if (filaSeleccionada < tabla_contratos.getRowCount() - 1) {
                filaSeleccionada = filaSeleccionada + 1;
            }
            rellenardatos(filaSeleccionada);
        }
    }//GEN-LAST:event_tabla_contratosKeyPressed

    private void txt_codigo_contratoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigo_contratoKeyTyped
        utilidades.validarCampoNumerico(evt);
        int limite = 3;
        if (txt_codigo_contrato.getText().length() >= limite) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_codigo_contratoKeyTyped

    private void btn_cancelar_añadir_contratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelar_añadir_contratoActionPerformed
        restablecerTodo();
    }//GEN-LAST:event_btn_cancelar_añadir_contratoActionPerformed

    private void btn_modificar_contratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificar_contratoActionPerformed
        boolean situacion = false;
        boolean asegurado = false;
        int filaSeleccionada = tabla_contratos.getSelectedRow();
        int id = (int) tabla_contratos.getValueAt(filaSeleccionada, 0);
        int codigo_tipo_contrato = Integer.parseInt(txt_codigo_contrato.getText());
        int codigo_trabajador = (int) tabla_contratos.getValueAt(filaSeleccionada, 2);
        Date fechainicio = txt_fechainicio_contrato.getDate();
        formato.format(fechainicio);
        Date fechafin = txt_fechafin_contrato.getDate();
        formato.format(fechafin);
        String nombre_contrato = txt_nombre_contrato.getText();
        Double horas = Double.parseDouble(txt_horas_contrato.getText());
        situacion = rb_situacion_alta.isSelected();
        asegurado = rb_asegurado_si.isSelected();
        int comparacionfechas = fechafin.compareTo(fechainicio);
        if (comparacionfechas < 0) {
            JOptionPane.showMessageDialog(rootPane, "La fecha de inicio de contrato no puede ser posterior a la fecha de fin de contrato");
        } else {
            Contrato contrato = new Contrato(codigo_tipo_contrato, codigo_trabajador, fechainicio, fechafin, horas, situacion, asegurado);

            try {
                utilidades.updatebbdd("contratos", contrato, id);
                utilidades.rellenarTabla(tabla_contratos, "contratos", "");
            } catch (SQLException ex) {
                Logger.getLogger(Contratos_vista.class.getName()).log(Level.SEVERE, null, ex);
            }
            restablecerTodo();
        }


    }//GEN-LAST:event_btn_modificar_contratoActionPerformed

    private void btn_añadir_contratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_añadir_contratoActionPerformed
        String nombre_contrato = txt_nombre_contrato.getText();
        Date fechainicio = txt_fechainicio_contrato.getDate();
        Date fechafin = txt_fechafin_contrato.getDate();
        String codigo_contrato = txt_codigo_contrato.getText();

        if (nombre_contrato.isEmpty() || fechainicio == null || fechafin == null || codigo_contrato.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "El campo contrato, codigo_contrato, fecha de inicio y fin no pueden estar vacio");
        } else {
            int comparacionfechas = fechafin.compareTo(fechainicio);
            if (comparacionfechas < 0) {
                JOptionPane.showMessageDialog(rootPane, "La fecha de inicio de contrato no puede ser posterior a la fecha de fin de contrato");
            } else {
                utilidades.rellenarTabla(tabla_trabajadores, "trabajadores", "");
                JOptionPane.showMessageDialog(rootPane, "Ahora debes seleccionar el trabajador");
                panel_tabla_trabajadores.setVisible(true);
                jPanel1.requestFocusInWindow();
                tabla_contratos.setVisible(false);
                tabla_contratos.getTableHeader().setVisible(false);
                jScrollPane2.setVisible(false);
                btn_añadir_contrato.setVisible(false);
                btn_modificar_contrato.setVisible(false);
                btn_cancelar_añadir_contrato.setVisible(true);
                txt_buscador_contrato.setVisible(false);
                lbl_buscar.setVisible(false);
                lbl_informacion_buscador.setVisible(false);

            }
        }
    }//GEN-LAST:event_btn_añadir_contratoActionPerformed

    private void btn_borrar_contratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrar_contratoActionPerformed
        int filaSeleccionada = tabla_contratos.getSelectedRow();
        int opcionborrar = JOptionPane.showConfirmDialog(rootPane, "¿Estas seguro de borrar el registro?\nContrato: " + (String) tabla_contratos.getValueAt(filaSeleccionada, 3));
        switch (opcionborrar) {
            case 0://OPCION SI BORRAR TRABAJADOR
                String id = String.valueOf(tabla_contratos.getValueAt(filaSeleccionada, 0));
                 {
                    try {
                        utilidades.deleteBbdd("contratos", id);

                    } catch (SQLException ex) {
                        Logger.getLogger(Contratos_vista.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    utilidades.rellenarTabla(tabla_contratos, "contratos", "");
                    restablecerTodo();
                }

                break;

            case 1://OPCION NO BORRAR CONTRATO, se tiene que poner para que los datos que ya estan escritos en los jtextfield no se borren al darle a "NO"

                break;

            default://OPCION CANCELAR

                restablecerTodo();
                break;
        }
    }//GEN-LAST:event_btn_borrar_contratoActionPerformed

    private void txt_buscador_trabajadorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_buscador_trabajadorFocusGained
        if (txt_buscador_trabajador.getText().indexOf("Buscar...") >= 0) {
            txt_buscador_trabajador.setText("");
        }
    }//GEN-LAST:event_txt_buscador_trabajadorFocusGained

    private void txt_buscador_trabajadorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_buscador_trabajadorFocusLost
        if (txt_buscador_trabajador.getText().length() == 0) {
            txt_buscador_trabajador.setText("Buscar...");
        }
    }//GEN-LAST:event_txt_buscador_trabajadorFocusLost

    private void txt_buscador_trabajadorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscador_trabajadorKeyTyped
        boolean esTexto = utilidades.validarCampoTexto(evt);

        if (!esTexto && !txt_buscador_trabajador.getText().isEmpty()) {//SI EL BUSCADOR NO ESTA VACIO, VACIA LA TABLA Y EMPIEZA A BUSCAR CON LOS CARACTERES QUE LE VAMOS INTRODUCIENDO
            DefaultTableModel dm = (DefaultTableModel) tabla_trabajadores.getModel();
            dm.getDataVector().removeAllElements();
            dm.fireTableDataChanged();
//            utilidades.buscaryRellenarTabla(evt, txt_buscador_trabajador.getText(), tabla_trabajadores, "trabajadores");
        } else {//SI POR EL CONTRARIO ESTA VACIO EL BUSCADOR, ENTONCES RELLENA LA TABLA CON TODO
            utilidades.rellenarTabla(tabla_trabajadores, "trabajadores", "");
        }
    }//GEN-LAST:event_txt_buscador_trabajadorKeyTyped

    private void tabla_trabajadoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_trabajadoresMouseClicked
        int filaSeleccionada = tabla_trabajadores.getSelectedRow();
        if (tieneContratoAlta(filaSeleccionada)) {
            JOptionPane.showMessageDialog(rootPane, "Este trabajador ya tiene un contrato en alta con lo cual no se le puede dar de alta ninguno más.\nPuede dar de baja el contrato actual y posteriormente dar de alta un nuevo contrato.");
        } else {
            int opcionAñadir = JOptionPane.showConfirmDialog(rootPane, "¿Estas seguro de añadir el contrato al siguiente trabajador?\nTrabajador: " + (String) tabla_trabajadores.getValueAt(filaSeleccionada, 2) + " " + (String) tabla_trabajadores.getValueAt(filaSeleccionada, 3));

            switch (opcionAñadir) {
                case 0://SI
                    boolean situacion = true; //SIEMPRE QUE SE DA DE ALTA UN NUEVO CONTRATO ES EN SITUACION DE ALTA.
                    boolean asegurado = false;
                    int codigo_tipo_contrato = Integer.parseInt(txt_codigo_contrato.getText());
                    Double horas = Double.parseDouble(txt_horas_contrato.getText());
                    Date fechainicio = txt_fechainicio_contrato.getDate();
                    Date fechafin = txt_fechafin_contrato.getDate();
                    asegurado = rb_asegurado_si.isSelected();
                    formato.format(fechainicio);
                    formato.format(fechafin);
                    int codigo_trabajador = (int) tabla_trabajadores.getValueAt(filaSeleccionada, 1);
                    Contrato contrato = new Contrato(codigo_tipo_contrato, codigo_trabajador, fechainicio, fechafin, horas, situacion, asegurado);
                    try {
                        //AHORA NOS CONECTAMOS A LA BBDD Y LO AÑADIMOS
                        utilidades.addBbdd("contratos", contrato);//METODO PARA AÑADIR CUALQUIER COSA A LA BBDD SEGUN LA TABLA Y EL OBJETO QUE SE LE PASE
                    } catch (SQLException ex) {
                        Logger.getLogger(Contratos_vista.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //AHORA LLAMAMOS AL METODO DE RECARGAR LA TABLA
                    utilidades.rellenarTabla(tabla_contratos, "contratos", "");
                    restablecerTodo();

                    break;

                case 1://NO 

                    break;
                default: //CANCELAR
                    restablecerTodo();
            }

        }


    }//GEN-LAST:event_tabla_trabajadoresMouseClicked

    private void btn_cancelar_modificacion_contratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelar_modificacion_contratoActionPerformed
        restablecerTodo();
    }//GEN-LAST:event_btn_cancelar_modificacion_contratoActionPerformed

    private void txt_horas_contratoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_horas_contratoKeyTyped
        utilidades.validarCampoNumerico(evt);
        utilidades.validarCampoDecimal(evt);
    }//GEN-LAST:event_txt_horas_contratoKeyTyped

    private void txt_fechainicio_contratoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fechainicio_contratoKeyTyped
        utilidades.validarCampoNumerico(evt);
    }//GEN-LAST:event_txt_fechainicio_contratoKeyTyped

    private void txt_nombre_contratoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombre_contratoKeyTyped
        utilidades.validarCampoTexto(evt);
    }//GEN-LAST:event_txt_nombre_contratoKeyTyped

    private void txt_buscador_contratoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_buscador_contratoFocusGained
        if (txt_buscador_contrato.getText().indexOf("Buscar...") >= 0) {
            txt_buscador_contrato.setText("");
        }
    }//GEN-LAST:event_txt_buscador_contratoFocusGained

    private void txt_buscador_contratoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_buscador_contratoFocusLost
        if (txt_buscador_contrato.getText().length() == 0) {
            txt_buscador_contrato.setText("Buscar...");
        }
    }//GEN-LAST:event_txt_buscador_contratoFocusLost

    private void txt_buscador_contratoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscador_contratoKeyReleased

        if (!txt_buscador_contrato.getText().isEmpty()) {//SI EL BUSCADOR NO ESTA VACIO, VACIA LA TABLA Y EMPIEZA A BUSCAR CON LOS CARACTERES QUE LE VAMOS INTRODUCIENDO
            DefaultTableModel dm = (DefaultTableModel) tabla_contratos.getModel();
            dm.getDataVector().removeAllElements();
            dm.fireTableDataChanged();
            utilidades.buscaryRellenarTabla(evt, txt_buscador_contrato.getText(), tabla_contratos, "contratos");
        } else {//SI POR EL CONTRARIO ESTA VACIO EL BUSCADOR, ENTONCES RELLENA LA TABLA CON TODO
            utilidades.rellenarTabla(tabla_contratos, "contratos", "");
        }
    }//GEN-LAST:event_txt_buscador_contratoKeyReleased

    private void txt_codigo_contratoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigo_contratoKeyReleased
        int limite = 3;
        if (txt_codigo_contrato.getText().length() >= limite) {
            int codigo_tipo_contrato = Integer.parseInt(txt_codigo_contrato.getText());
            String denominacion_contrato = utilidades.rellenarTipoContrato(codigo_tipo_contrato);
            txt_nombre_contrato.setText(denominacion_contrato);
        } else {
            txt_nombre_contrato.setText("");
        }
    }//GEN-LAST:event_txt_codigo_contratoKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Contratos_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Contratos_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Contratos_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Contratos_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Contratos_vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_añadir_contrato;
    private javax.swing.JButton btn_borrar_contrato;
    private javax.swing.JButton btn_cancelar_añadir_contrato;
    private javax.swing.JButton btn_cancelar_modificacion_contrato;
    private javax.swing.JButton btn_modificar_contrato;
    private javax.swing.ButtonGroup grupo1;
    private javax.swing.ButtonGroup grupo2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_buscar;
    private javax.swing.JLabel lbl_informacion_buscador;
    private javax.swing.JLabel lbl_situacion_contrato;
    private javax.swing.JLabel lbl_trabajador;
    private javax.swing.JPanel panel_tabla_trabajadores;
    private javax.swing.JRadioButton rb_asegurado_no;
    private javax.swing.JRadioButton rb_asegurado_si;
    private javax.swing.JRadioButton rb_situacion_alta;
    private javax.swing.JRadioButton rb_situacion_baja;
    private javax.swing.JTable tabla_contratos;
    private javax.swing.JTable tabla_trabajadores;
    private javax.swing.JTextField txt_buscador_contrato;
    private javax.swing.JTextField txt_buscador_trabajador;
    private javax.swing.JTextField txt_codigo_contrato;
    private org.jdesktop.swingx.JXDatePicker txt_fechafin_contrato;
    private org.jdesktop.swingx.JXDatePicker txt_fechainicio_contrato;
    private javax.swing.JTextField txt_horas_contrato;
    private javax.swing.JTextField txt_nombre_contrato;
    private javax.swing.JTextField txt_nombre_trabajador;
    // End of variables declaration//GEN-END:variables

    private void rellenardatos(int filaSeleccionada) {

        Contrato contrato = new Contrato();
        Trabajador trabajador = new Trabajador();

        btn_añadir_contrato.setVisible(false);
        btn_modificar_contrato.setVisible(true);
        btn_cancelar_modificacion_contrato.setVisible(true);
        btn_cancelar_añadir_contrato.setVisible(true);
        btn_borrar_contrato.setVisible(true);
        lbl_situacion_contrato.setVisible(true);
        rb_situacion_alta.setVisible(true);
        rb_situacion_baja.setVisible(true);
        int id = (int) tabla_contratos.getValueAt(filaSeleccionada, 0);

        for (int i = 0; i < utilidades.lista_de_contratos.size(); i++) {
            contrato = utilidades.lista_de_contratos.get(i);

            if (contrato.getId() == id) {
                txt_codigo_contrato.setText(String.valueOf(tabla_contratos.getValueAt(filaSeleccionada, 1)));
                String denominacion = utilidades.rellenarTipoContrato(contrato.getCodigo_tipo_contrato());
                txt_nombre_contrato.setText(denominacion);
                txt_horas_contrato.setText(Double.toString(contrato.getHoras()));
                if (contrato.isAsegurado()) {
                    rb_asegurado_si.setSelected(true);
                } else {
                    rb_asegurado_no.setSelected(true);
                }
                if (contrato.isSituacion()) {
                    rb_situacion_alta.setSelected(true);
                } else {
                    rb_situacion_baja.setSelected(true);
                }
                txt_fechainicio_contrato.setDate(contrato.getFechainicio());
                txt_fechafin_contrato.setDate(contrato.getFechafin());

                lbl_trabajador.setVisible(true);
                txt_nombre_trabajador.setVisible(true);

                /*for (int j = 0; j < utilidades.lista_de_trabajadores.size(); j++) {
                    trabajador = utilidades.lista_de_trabajadores.get(j);
                    if (contrato.getCodigo_trabajador() == trabajador.getCodigo()) {
                        txt_nombre_trabajador.setText(trabajador.getNombre() + " " + trabajador.getApellido1() + " " + trabajador.getApellido2());
                    }
                }*/
            }
        }

    }

    private void restablecerTodo() {
        //CAMPOS DE TEXTO Y LABELS
        txt_nombre_contrato.setText("");
        txt_codigo_contrato.setText("");
        txt_fechainicio_contrato.setDate(null);
        txt_fechafin_contrato.setDate(null);
        txt_horas_contrato.setText("");
        grupo1.clearSelection();
        grupo2.clearSelection();
        txt_nombre_trabajador.setVisible(false);
        lbl_trabajador.setVisible(false);
        txt_buscador_contrato.setVisible(true);
        txt_codigo_contrato.setEditable(true);
        lbl_buscar.setVisible(true);
        lbl_informacion_buscador.setVisible(true);

        //BOTONES
        btn_añadir_contrato.setVisible(true);
        btn_cancelar_modificacion_contrato.setVisible(false);
        btn_borrar_contrato.setVisible(false);
        btn_modificar_contrato.setVisible(false);
        btn_cancelar_añadir_contrato.setVisible(false);

        //PANEL Y TABLAS
        panel_tabla_trabajadores.setVisible(false);
        tabla_contratos.setVisible(true);
        tabla_contratos.getTableHeader().setVisible(true);
        jScrollPane2.setVisible(true);

    }

    private boolean tieneContratoAlta(int filaSeleccionada) {
        int codigo_trabajador = (int) tabla_trabajadores.getValueAt(filaSeleccionada, 1);
        for (int i = 0; i < utilidades.lista_de_contratos.size(); i++) {
            if (codigo_trabajador == utilidades.lista_de_contratos.get(i).getCodigo_trabajador()) {
                if (utilidades.lista_de_contratos.get(i).isSituacion()) {
                    return true;
                }
            }
        }
        return false;
    }

}
