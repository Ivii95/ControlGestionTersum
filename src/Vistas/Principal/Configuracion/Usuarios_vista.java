/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas.Principal.Configuracion;

import Modelo.Entidades.Usuario;
import Utilidades.Utilidades;
import Utilidades.UtilidadesPantalla;
import Vistas.Principal.Principal_vista;
import Utilidades.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.help.HelpSetException;
import javax.swing.JOptionPane;

/**
 *
 * @author DisenoWeb
 */
public class Usuarios_vista extends javax.swing.JFrame {

    Utilidades utilidades = new Utilidades();
    public static int id_rol_seleccionado;
    String[] lista_de_roles;

    /**
     * Creates new form Usuarios_vista
     */
    public Usuarios_vista() {
        initComponents();
        UtilidadesPantalla.resolucionPantalla(this);
        UtilidadesPantalla.centrarTablas(tabla_usuarios);
        rellenarCombosRoles();
        ponAyuda();
        tabla_usuarios.getColumnModel().getColumn(0).setMaxWidth(0);
        tabla_usuarios.getColumnModel().getColumn(0).setMinWidth(0);
        tabla_usuarios.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        tabla_usuarios.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        btn_modificar_nombre_usuario.setVisible(false);
        btn_borrar_usuario.setVisible(false);
        btn_limpiar_datos.setVisible(false);
        btn_modificar_password_usuario.setVisible(false);
        btn_modificar_rol_usuario.setVisible(false);
        utilidades.rellenarTabla(tabla_usuarios, "usuarios", "");
    }

    public void ponAyuda() {
        try {
            HelpSet helpset = new HelpSet(getClass().getClassLoader(), UtilidadesPantalla.obtenerUrlAyuda());
            HelpBroker hb = helpset.createHelpBroker();
            hb.enableHelpKey(this.getContentPane(), "configuracion", helpset);
        } catch (HelpSetException ex) {
            Logger.getLogger(Principal_vista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Titulo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lbl_usuario = new javax.swing.JLabel();
        txt_usuario = new javax.swing.JTextField();
        lbl_password = new javax.swing.JLabel();
        txt_password = new javax.swing.JPasswordField();
        lbl_roles = new javax.swing.JLabel();
        combo_rol = new javax.swing.JComboBox<>();
        btn_crear_usuario = new javax.swing.JButton();
        btn_modificar_nombre_usuario = new javax.swing.JButton();
        btn_modificar_password_usuario = new javax.swing.JButton();
        btn_modificar_rol_usuario = new javax.swing.JButton();
        btn_limpiar_datos = new javax.swing.JButton();
        btn_borrar_usuario = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_usuarios = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1360, 762));
        setResizable(false);
        setSize(new java.awt.Dimension(1360, 762));

        Titulo.setMaximumSize(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gestion de usuarios");
        jLabel1.setMaximumSize(null);
        jLabel1.setMinimumSize(null);
        jLabel1.setPreferredSize(null);

        javax.swing.GroupLayout TituloLayout = new javax.swing.GroupLayout(Titulo);
        Titulo.setLayout(TituloLayout);
        TituloLayout.setHorizontalGroup(
            TituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TituloLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        TituloLayout.setVerticalGroup(
            TituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setMaximumSize(null);
        jPanel1.setVerifyInputWhenFocusTarget(false);

        lbl_usuario.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_usuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_usuario.setText("Usuario");

        lbl_password.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_password.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_password.setText("Contraseña");

        txt_password.setText("00000");
        txt_password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_passwordFocusGained(evt);
            }
        });

        lbl_roles.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_roles.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_roles.setText("Roles");

        btn_crear_usuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/añadir.png"))); // NOI18N
        btn_crear_usuario.setText("CREAR USUARIO");
        btn_crear_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_crear_usuarioActionPerformed(evt);
            }
        });

        btn_modificar_nombre_usuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/modificar.png"))); // NOI18N
        btn_modificar_nombre_usuario.setText("MODIFICAR NOMBRE USUARIO");
        btn_modificar_nombre_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificar_nombre_usuarioActionPerformed(evt);
            }
        });

        btn_modificar_password_usuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/modificar.png"))); // NOI18N
        btn_modificar_password_usuario.setText("MODIFICAR CONTRASEÑA USUARIO");
        btn_modificar_password_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificar_password_usuarioActionPerformed(evt);
            }
        });

        btn_modificar_rol_usuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/modificar.png"))); // NOI18N
        btn_modificar_rol_usuario.setText("MODIFICAR ROL USUARIO");
        btn_modificar_rol_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificar_rol_usuarioActionPerformed(evt);
            }
        });

        btn_limpiar_datos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/limpiar.png"))); // NOI18N
        btn_limpiar_datos.setText("RESET");
        btn_limpiar_datos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiar_datosActionPerformed(evt);
            }
        });

        btn_borrar_usuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/borrar.png"))); // NOI18N
        btn_borrar_usuario.setText("BORRAR USUARIO");
        btn_borrar_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrar_usuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_password, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_crear_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_roles, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_rol, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_modificar_password_usuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_modificar_nombre_usuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_borrar_usuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_modificar_rol_usuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_limpiar_datos, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_modificar_nombre_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_modificar_password_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_modificar_rol_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_borrar_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_limpiar_datos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_roles, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(combo_rol, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txt_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbl_password, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_crear_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jScrollPane1.setMaximumSize(null);
        jScrollPane1.setMinimumSize(null);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(1360, 486));

        tabla_usuarios.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tabla_usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "NOMBRE DE USUARIO", "FUNCION"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_usuarios.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tabla_usuariosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tabla_usuariosFocusLost(evt);
            }
        });
        tabla_usuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_usuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_usuarios);
        if (tabla_usuarios.getColumnModel().getColumnCount() > 0) {
            tabla_usuarios.getColumnModel().getColumn(0).setResizable(false);
            tabla_usuarios.getColumnModel().getColumn(1).setResizable(false);
            tabla_usuarios.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Titulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabla_usuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_usuariosMouseClicked
        int filaSeleccionada = tabla_usuarios.getSelectedRow();

        //HACER VISIBLE FALSE
        txt_usuario.setVisible(false);
        txt_password.setVisible(false);
        btn_crear_usuario.setVisible(false);
        combo_rol.setVisible(false);
        lbl_usuario.setVisible(false);
        lbl_password.setVisible(false);
        lbl_roles.setVisible(false);
        //HACER VISIBLE TRUE
        btn_modificar_nombre_usuario.setVisible(true);
        btn_limpiar_datos.setVisible(true);
        btn_borrar_usuario.setVisible(true);
        btn_modificar_password_usuario.setVisible(true);
        btn_modificar_rol_usuario.setVisible(true);
        //rellenardatos(filaSeleccionada);
    }//GEN-LAST:event_tabla_usuariosMouseClicked

    private void btn_modificar_rol_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificar_rol_usuarioActionPerformed
        Object o = JOptionPane.showInputDialog(null, "Elige un rol", "Cambio de rol de usuario", JOptionPane.QUESTION_MESSAGE, null, lista_de_roles, lista_de_roles[0]);
        if (o != null) {
            try {
                String nombre_rol = o.toString();
                int id_rol = utilidades.sacarIdRol(nombre_rol);
                int filaSeleccionada = tabla_usuarios.getSelectedRow();
                int id = (int) tabla_usuarios.getValueAt(filaSeleccionada, 0);
                Usuario usuario = new Usuario();
                usuario.setId_rol(id_rol);

                utilidades.updatePermisos(id, nombre_rol);

                utilidades.updatebbdd("usuarios", usuario, id);
                utilidades.rellenarTabla(tabla_usuarios, "usuarios", "");

                restablecerTodo();
            } catch (SQLException ex) {
                Logger.getLogger(Usuarios_vista.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_btn_modificar_rol_usuarioActionPerformed

    private void btn_modificar_password_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificar_password_usuarioActionPerformed
        String contraseña = JOptionPane.showInputDialog(null, "Elige una contraseña", "Cambio de contraseña de usuario", JOptionPane.WARNING_MESSAGE);
        if (contraseña == null || contraseña.indexOf(' ') != -1 || contraseña.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No has introducido ninguna contraseña o la contraseña tiene espacios en blanco.");
        } else {
            try {
                contraseña = utilidades.encriptaEnMD5(contraseña);
                int filaSeleccionada = tabla_usuarios.getSelectedRow();
                int id = (int) tabla_usuarios.getValueAt(filaSeleccionada, 0);
                Usuario usuario = new Usuario();
                usuario.setPassword(contraseña);

                utilidades.updatebbdd("usuarios", usuario, id);
                utilidades.rellenarTabla(tabla_usuarios, "usuarios", "");

                restablecerTodo();
            } catch (SQLException ex) {
                Logger.getLogger(Usuarios_vista.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_modificar_password_usuarioActionPerformed

    private void btn_limpiar_datosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiar_datosActionPerformed
        restablecerTodo();
    }//GEN-LAST:event_btn_limpiar_datosActionPerformed

    private void btn_borrar_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrar_usuarioActionPerformed
        int filaSeleccionada = tabla_usuarios.getSelectedRow();
        int opcionborrar = JOptionPane.showConfirmDialog(rootPane, "¿Estas seguro de borrar el registro?\nUsuario: " + (String) tabla_usuarios.getValueAt(filaSeleccionada, 1));
        switch (opcionborrar) {
            case 0://OPCION SI BORRAR TRABAJADOR
                String id = String.valueOf(tabla_usuarios.getValueAt(filaSeleccionada, 0));
                 {
                    try {
                        utilidades.deleteBbdd("usuarios", id);//BORRAMOS AL USUARIO EN CUESTION
                        utilidades.deleteBbdd("permisos", id);//BORRAMOS TODOS LOS PERMISOS DE ESE USUARIO
                    } catch (SQLException ex) {
                        Logger.getLogger(Usuarios_vista.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    utilidades.rellenarTabla(tabla_usuarios, "usuarios", "");
                    restablecerTodo();
                }

                break;

            case 1://OPCION NO BORRAR TRABAJADOR, se tiene que poner para que los datos que ya estan escritos en los jtextfield no se borren al darle a "NO"
                break;

            default://OPCION CANCELAR
                restablecerTodo();
                break;
        }

    }//GEN-LAST:event_btn_borrar_usuarioActionPerformed

    private void btn_modificar_nombre_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificar_nombre_usuarioActionPerformed
        String nombre = JOptionPane.showInputDialog(null, "Elige un nombre", "Cambio de nombre de usuario", JOptionPane.WARNING_MESSAGE);
        if (nombre == null || nombre.indexOf(' ') != -1) {
            JOptionPane.showMessageDialog(rootPane, "No has introducido ningún nombre de usuario o el nombre tiene espacios en blanco.");
        } else {
            try {
                int filaSeleccionada = tabla_usuarios.getSelectedRow();
                int id = (int) tabla_usuarios.getValueAt(filaSeleccionada, 0);
                Usuario usuario = new Usuario();
                usuario.setNombre(nombre);

                utilidades.updatebbdd("usuarios", usuario, id);
                utilidades.rellenarTabla(tabla_usuarios, "usuarios", "");

                restablecerTodo();
            } catch (SQLException ex) {
                Logger.getLogger(Usuarios_vista.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_modificar_nombre_usuarioActionPerformed

    private void btn_crear_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_crear_usuarioActionPerformed
        boolean permisos_añadidos = false;
        boolean existe = false;
        if (txt_usuario.getText().equals("") || txt_password.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "El campo usuario o contraseña no pueden estar vacio");
        } else {
            String nombre = txt_usuario.getText();
            existe = existeUsuario(nombre);
            if (!existe) {
                String password = txt_password.getText();
                password = utilidades.encriptaEnMD5(password);
                int num_rol = combo_rol.getSelectedIndex();
                String rol = combo_rol.getItemAt(num_rol);
                int id_rol = Integer.parseInt(rol.substring(0, 1));
                String nombre_rol = rol.substring(2);
                Usuario usuario = new Usuario(nombre, password, id_rol);

                try {
                    utilidades.addBbdd("usuarios", usuario);//METODO PARA AÑADIR CUALQUIER COSA A LA BBDD SEGUN LA TABLA Y EL OBJETO QUE SE LE PASE

                    //AQUI AÑADIMOS LOS PERMISOS POR DEFECTO DE EL ROL ADMINISTRADOR
                    permisos_añadidos = utilidades.addPermisos(nombre, nombre_rol);
                    if (permisos_añadidos) {
                        JOptionPane.showMessageDialog(rootPane, "Permisos por defecto añadidos");
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Problema al añadir los permisos por defecto");
                    }

                    JOptionPane.showMessageDialog(rootPane, "Usuario añadido correctamente");
                    utilidades.rellenarTabla(tabla_usuarios, "usuarios", "");
                } catch (SQLException ex) {
                    Logger.getLogger(Usuarios_vista.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "El usuario " + nombre + " ya existe, prueba con otro.");
            }

        }
    }//GEN-LAST:event_btn_crear_usuarioActionPerformed

    private void txt_passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_passwordFocusGained
        txt_password.setText("");
    }//GEN-LAST:event_txt_passwordFocusGained

    private void tabla_usuariosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabla_usuariosFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_tabla_usuariosFocusGained

    private void tabla_usuariosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabla_usuariosFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_tabla_usuariosFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuarios_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuarios_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuarios_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuarios_vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usuarios_vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Titulo;
    private javax.swing.JButton btn_borrar_usuario;
    private javax.swing.JButton btn_crear_usuario;
    private javax.swing.JButton btn_limpiar_datos;
    private javax.swing.JButton btn_modificar_nombre_usuario;
    private javax.swing.JButton btn_modificar_password_usuario;
    private javax.swing.JButton btn_modificar_rol_usuario;
    private javax.swing.JComboBox<String> combo_rol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_password;
    private javax.swing.JLabel lbl_roles;
    private javax.swing.JLabel lbl_usuario;
    private javax.swing.JTable tabla_usuarios;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_usuario;
    // End of variables declaration//GEN-END:variables

    private void rellenarCombosRoles() {
        int i = 0;
        int contador = 0;
        String consulta = "SELECT * FROM roles";
        Conexion conn = new Conexion();
        PreparedStatement ps = null;
        PreparedStatement ps2 = null;
        ResultSet rs = null;
        ResultSet rs2 = null;
        Connection conexion = conn.conectar_db_empresas();
        if (conexion != null) {
            try {
                ps = conexion.prepareStatement(consulta);
                rs = ps.executeQuery();
                rs.last();//NOS PONEMOS EN LA ULTIMA POSICION DEL RESULTSET
                i = rs.getRow(); //VEMOS CUAL ES LA ULTIMA POSICION Y LA ALMACENAMOS EN UNA VARIABLE
                rs.beforeFirst();//VOLVEMOS A LA PRIMERA POSICION DEL RESULTSET PARA EMPEZAR A ITERAR CON EL WHILE
                lista_de_roles = new String[i];
                while (rs.next()) {
                    combo_rol.addItem(rs.getInt("id") + " " + rs.getString("nombre"));
                    lista_de_roles[contador] = rs.getString("nombre");
                    contador++;
                }

            } catch (SQLException ex) {
                Logger.getLogger(Usuarios_vista.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private void rellenardatos(int filaSeleccionada) {
        Usuario usuario = new Usuario();

        btn_crear_usuario.setVisible(false);
        btn_modificar_nombre_usuario.setVisible(true);
        btn_limpiar_datos.setVisible(true);
        btn_borrar_usuario.setVisible(true);
        txt_password.setText("");
        int id = (int) tabla_usuarios.getValueAt(filaSeleccionada, 0);

        for (int i = 0; i < utilidades.lista_de_usuarios.size(); i++) {
            usuario = utilidades.lista_de_usuarios.get(i);

            if (usuario.getId() == id) {
                txt_usuario.setText((String) tabla_usuarios.getValueAt(filaSeleccionada, 1));
                combo_rol.setSelectedIndex(usuario.getId_rol() - 1);

            }
        }

    }

    private boolean existeUsuario(String nombreusuario) {
        String consulta = "SELECT * FROM usuarios WHERE nombre='" + nombreusuario + "'";
        Conexion conn = new Conexion();
        PreparedStatement ps = null;
        ResultSet rs = null;
        Connection conexion = conn.conectar_db_empresas();

        try {
            ps = conexion.prepareStatement(consulta);
            rs = ps.executeQuery();
            if (rs.next()) {
                return true;
            }

            conn.desconectar(conexion);
        } catch (SQLException ex) {
            Logger.getLogger(Usuarios_vista.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    private void restablecerTodo() {
        txt_usuario.setVisible(true);
        txt_password.setVisible(true);
        combo_rol.setVisible(true);
        btn_crear_usuario.setVisible(true);
        lbl_usuario.setVisible(true);
        lbl_password.setVisible(true);
        lbl_roles.setVisible(true);
        txt_usuario.setText("");
        txt_password.setText("");
        btn_borrar_usuario.setVisible(false);
        btn_limpiar_datos.setVisible(false);
        btn_modificar_nombre_usuario.setVisible(false);
        btn_modificar_password_usuario.setVisible(false);
        btn_modificar_rol_usuario.setVisible(false);

    }

}
